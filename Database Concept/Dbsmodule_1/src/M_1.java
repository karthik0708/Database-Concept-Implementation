
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rajajisai
 */
public class M_1 extends javax.swing.JFrame {

    /**
     * Creates new form M_1
     */
    public M_1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        att = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fd = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ckeys = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        decomprel = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        nf = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enter the attributes:(example-->a,b,c,d ......)");

        jLabel2.setText("Enter the funtional dependencies(each separated by ';'):(example-->  a,c->b;c->a;......)");

        jButton1.setText("Click to find out normal form,candidates and decomposed relations");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Candidate Keys of the given relation:");

        jLabel4.setText("Decomposed relations with their candidate keys");

        ckeys.setColumns(20);
        ckeys.setRows(5);
        jScrollPane1.setViewportView(ckeys);

        decomprel.setColumns(20);
        decomprel.setRows(5);
        jScrollPane2.setViewportView(decomprel);

        jLabel5.setText("Highest Normal Form of the given relation:");

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jLabel6.setText("Given a relation,this application can be used to find out its NF,candidate keys as well as decomposition to next the normal form.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(clear)
                .addGap(127, 127, 127))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nf, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(fd, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(att, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(86, 86, 86))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(att, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(fd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(clear))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(109, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ckeys.setText("");
        nf.setText("");
        String a=att.getText();
        String[] c=a.split(",");
       //
       
        Relation rel=new Relation(c);
        
        ArrayList<FuncDep> dep=new ArrayList<FuncDep>(); 
        ArrayList<FuncDep> eme=new ArrayList<FuncDep>();
        
        //Getting functionsl dependencies separated by commas
        a=fd.getText();      
        //b contains each functional dependecies 
        String[] b=a.split(";");
        //separeating left and right of each functional dependency
        String[] leftfdwithcomma=new String[b.length];
        String[] rightfdwithcomma=new String[b.length];
        for(int i=0;i<b.length;i++){
            String[] s=b[i].split("->");
           
            leftfdwithcomma[i]=s[0];
            rightfdwithcomma[i]=s[1];
    
        } 
        //Removing the commas from each side an adding attributes to a hash set.
        for(int i=0;i<b.length;i++){
            HashSet<String> left=new HashSet<String>();
            HashSet<String> right=new HashSet<String>();
            HashSet<String> sleft=new HashSet<String>();
            HashSet<String> sright=new HashSet<String>();
            String[] l=leftfdwithcomma[i].split(",");
            String[] r=rightfdwithcomma[i].split(",");
            
            for(int j=0;j<l.length;j++){
                left.add(l[j]);
                sleft.add(l[j]);
            }
            
            for(int k=0;k<r.length;k++){
                right.add(r[k]);
                sright.add(r[k]);
            }
            eme.add(new FuncDep(left,right));
            dep.add(new FuncDep(sleft,sright));
        }
        
         ArrayList<FuncDep> dep1=rel.mincover(dep);
       
        
        ArrayList<LinkedHashSet> ck=new ArrayList<LinkedHashSet>(); 
            for(int j=0;j<c.length;j++){
                String temp=c[0];
                for(int i=0;i<c.length-1;i++){
                    c[i]=c[i+1];
                }
                c[c.length-1]=temp;
               
                Relation rt=new Relation(c); 
                LinkedHashSet<String> pk=rt.primkey(dep1);
                if(!ck.contains(pk)){
                    ck.add(pk);
                }
            }
            
            ckeys.setText("");
            ckeys.append("The candidate keys are"+"\n");
            for(LinkedHashSet f:ck){
            Iterator<String> j=f.iterator();
            while(j.hasNext()){
                 rel.candkey+=j.next();
            
            }
            rel.candkey+="\n";
            
            }
            
            ckeys.append(rel.candkey);
            
            rel.isbcnf(eme,ck);
            nf.setText(rel.normalform);
            decomprel.setText(rel.decomp);
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        nf.setText("");
        att.setText("");
        ckeys.setText("");
      
        decomprel.setText("");
        fd.setText("");
    }//GEN-LAST:event_clearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(M_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(M_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(M_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(M_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new M_1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField att;
    private javax.swing.JTextArea ckeys;
    private javax.swing.JButton clear;
    private javax.swing.JTextArea decomprel;
    private javax.swing.JTextField fd;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nf;
    // End of variables declaration//GEN-END:variables
}
